prometheus:
  kube-state-metrics:
    releaseLabel: true
    metricLabelsAllowlist:
      - endpoints=[*]
      - jobs=[*]
      - namespaces=[*]
      - nodes=[*]
      - pods=[*]
      - services=[*]
    metricAnnotationsAllowList:
      - endpoints=[*]
      - jobs=[*]
      - namespaces=[*]
      - nodes=[*]
      - pods=[*]
      - services=[*]

  serviceAccounts:
    alertmanager:
      create: false

  kubeStateMetrics:
    enabled: true
    extraArgs:
      - --log.level=debug

  prometheus-node-exporter:
    enabled: true
    hostNetwork: false
    extraArgs:
      - --log.level=debug

  prometheus-pushgateway:
    enabled: true
    persistentVolume:
      enabled: false
    extraArgs:
      - --log.level=debug

  alertmanager:
    enabled: false

  server:
    remote_write:
    # DigiUsher target skeleton. Target also includes tls and auth settings, extra headers and so on
    - url: https://app.digiusher.com/storage/api/v2/write
      name: digiusher

    # DigiUsher Kubernetes data source id
    dataSourceId: null
    # Username which is used on DigiUsher Kubernetes data source registration
    username: null
    # Password which is used on DigiUsher Kubernetes data source registration
    password: null
    # Remote write DigiUsher target tls CA certificate file
    caFile:

    configMapOverrideName: prometheus-server-config
    persistentVolume:
      enabled: false
    defaultFlagsOverride:
    - --enable-feature=agent
    - --config.file=/etc/config/prometheus.yml
    - --log.level=debug
    - --web.enable-lifecycle
    extraConfigmapMounts:
    # Config map with CA cert file
    - name: cert-config
      mountPath: /etc/digiusher/ssl
      configMap: prometheus-server-cert-config
      subPath: ""
      readOnly: true
    extraSecretMounts:
    # Secret with password file
    - name: password-secret
      mountPath: /etc/digiusher/auth
      subPath: ""
      secretName: prometheus-server-password-secret
      readOnly: true
  serverFiles:
    prometheus.yml:
      rule_files: []
